# tasks file for rke2-controlplane
- name: Create RKE2 config directory
  ansible.builtin.file:
    path: /etc/rancher/rke2/config.yaml.d
    state: directory
    mode: '0640'

- name: Add extra RKE2 config
  ansible.builtin.template:
    src: lobster-rke2.yaml.j2
    dest: /etc/rancher/rke2/config.yaml.d/lobster-rke2.yaml
    owner: root
    group: root
    mode: '0600'

- name: Start RKE2 server service
  ansible.builtin.systemd_service:
    state: restarted
    name: rke2-server
    enabled: true
  when: is_primary

- name: Run RKE2 STIG Rules script
  ansible.builtin.shell:
    cmd: /opt/rke2-stig-rules.sh -s && touch /root/.ansible-stig-rules
    creates: /root/.ansible-stig-rules
  when: is_primary

- name: Wait for primary control plane to come up before adding new nodes
  ansible.builtin.wait_for:
    host: "{{ groups.controlplane | map('extract', hostvars) | selectattr('is_primary', 'true') | map(attribute='ansible_default_ipv4.address') | first }}"
    port: 9345
    timeout: 300

- name: Start RKE2 server service
  ansible.builtin.systemd_service:
    state: restarted
    name: rke2-server
    enabled: true
  when: not is_primary

- name: Run RKE2 STIG Rules script
  ansible.builtin.shell:
    cmd: /opt/rke2-stig-rules.sh -s && touch /root/.ansible-stig-rules
    creates: /root/.ansible-stig-rules
  when: not is_primary

- name: Wait until rke2.yaml is present before continuing
  ansible.builtin.wait_for:
    path: /etc/rancher/rke2/rke2.yaml
    timeout: 300

- name: Copy rke2.yaml so we can access it later to deploy bundles.
  ansible.builtin.copy:
    src: /etc/rancher/rke2/rke2.yaml
    dest: /home/{{ ansible_user }}/rke2.yaml
    mode: 0644
    remote_src: true

- name: Get rke2.yaml from primary controlplane node
  ansible.builtin.fetch:
    src: /etc/rancher/rke2/rke2.yaml
    dest: ./rke2.yaml
    flat: true
  when: is_primary
